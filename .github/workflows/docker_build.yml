name: Docker build
run-name: Docker build test
on: [push]
jobs:
  Liatrio-endpoint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo Code
        uses: actions/checkout@v4
      - run: cd ${{ github.workspace }} && docker build --build-arg commitversion=${{ github.sha }} . -t liatrioex
      - run: docker run -d -p 80:80 liatrioex
      - run: docker logs $(docker ps -q)
      - run: sleep 1
      - run: docker logs $(docker ps -q)
      - run: curl 172.17.0.1
      - name: run tests
        uses: liatrio/github-actions/apprentice-action@0b41561cca6822cc8d880fe0e49e7807a41fdf91 # before minified json test

  Publish-to-dockerhub:
    needs: Liatrio-endpoint-test
    name: Push docker image to hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - name: Checkout Repo Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: cbrkadyn/apprenticetest
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            commitversion=${{ github.sha }}

  Auto_deploy:
    name: Auto Provision and deploy
    needs: Publish-to-dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: create private key
        shell: bash
        run: |
          echo "${{ secrets.SSHPRIVATEKEY }}" >> ./id_rsa && chmod 600 ./id_rsa
      - name: SSH- docker container stop and remove
        shell: bash
        run: |
          ssh -o StrictHostKeyChecking=no -i ./id_rsa root@${{ secrets.VM_IP }} "docker container stop liatrioex && docker container rm liatrioex"
      - name: SSH- docker container pull latest
        shell: bash
        run: |
          ssh -o StrictHostKeyChecking=no -i ./id_rsa root@${{ secrets.VM_IP }} "docker pull cbrkadyn/apprenticetest"
      - name: SSH- docker container run
        shell: bash
        run: |
          ssh -o StrictHostKeyChecking=no -i ./id_rsa root@${{ secrets.VM_IP }} "docker run -dit -p 80:80 --name liatrioex cbrkadyn/apprenticetest"

  # Auto_deploy:
  #   name: Auto Provision and deploy
  #   needs: Publish-to-dockerhub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo Code
  #       uses: actions/checkout@v4

  #     - name: Install ansible
  #       shell: bash
  #       run: |
  #         sudo apt update
  #         sudo apt install -y ansible

  #     - name: create private key
  #       shell: bash
  #       run: |
  #         echo "${{ secrets.SSHPRIVATEKEY }}" >> .id_rsa

  #     - name: create service file
  #       shell: bash
  #       run: |
  #         echo "${{ secrets.GCP_SERVICE_ACCOUNT }}" >> ./credential.json

  #     - name: Run playbook
  #       run: |
  #         ansible-playbook playbooks/gcp_autodeploy.yml --key-file ./id_rsa
